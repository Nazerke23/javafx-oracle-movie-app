set serveroutput on;
--1 procedure, 1 cursor, 1 dynamic sql

create or replace procedure create_log_table(p_table varchar) is
    var1 varchar2(4000);
    v_res varchar2(4000) := '';
    cursor curs is
    select COLUMN_NAME, data_type from ALL_TAB_COLUMNS where LOWER(Table_Name) = 'netflix';
begin
    for i in curs loop
        if lower(i.data_type) = 'number' then 
            v_res := v_res || ' old_' || i.column_name || ' ' || i.data_type||',';
            v_res := v_res || ' new_' || i.column_name || ' ' || i.data_type||',';
        elsif  lower(i.data_type) = 'varchar2' then 
            v_res := v_res || ' old_' || i.column_name || ' ' || i.data_type||'(100),';
            v_res := v_res || ' new_' || i.column_name || ' ' || i.data_type||'(100),';
        end if;
    end loop;
var1 := 'create table '|| p_table ||'_LOG(
          id number,
          operation_date date, ' ||
          v_res || ' 
          action varchar2(30),
          actionauthor varchar2(30)
          )';   
    EXECUTE IMMEDIATE var1;
    dbms_output.put_line(var1);
end create_log_table;
/

begin
    create_log_table('netflix');
end;
/
